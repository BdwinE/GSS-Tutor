function cov_51qo1piaq(){var path="C:\\Users\\asolu\\Desktop\\MSU_Denver\\Spring_2021\\Technical_Software_Proj\\Azure_Devops_FEV_Tutor_repo\\services\\tutor\\controllers\\tutors.js";var hash="9df2bf68d501fbaec47579573979adbac333bca3";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"C:\\Users\\asolu\\Desktop\\MSU_Denver\\Spring_2021\\Technical_Software_Proj\\Azure_Devops_FEV_Tutor_repo\\services\\tutor\\controllers\\tutors.js",statementMap:{"0":{start:{line:1,column:25},end:{line:1,column:62}},"1":{start:{line:2,column:14},end:{line:2,column:40}},"2":{start:{line:3,column:14},end:{line:3,column:32}},"3":{start:{line:5,column:0},end:{line:139,column:2}},"4":{start:{line:13,column:18},end:{line:13,column:20}},"5":{start:{line:15,column:4},end:{line:27,column:5}},"6":{start:{line:16,column:38},end:{line:16,column:46}},"7":{start:{line:18,column:23},end:{line:18,column:57}},"8":{start:{line:20,column:25},end:{line:20,column:46}},"9":{start:{line:24,column:6},end:{line:24,column:38}},"10":{start:{line:26,column:6},end:{line:26,column:23}},"11":{start:{line:29,column:4},end:{line:29,column:29}},"12":{start:{line:39,column:18},end:{line:39,column:20}},"13":{start:{line:41,column:4},end:{line:49,column:5}},"14":{start:{line:42,column:24},end:{line:42,column:44}},"15":{start:{line:46,column:6},end:{line:46,column:38}},"16":{start:{line:48,column:6},end:{line:48,column:23}},"17":{start:{line:51,column:4},end:{line:51,column:29}},"18":{start:{line:61,column:18},end:{line:61,column:20}},"19":{start:{line:63,column:4},end:{line:72,column:5}},"20":{start:{line:64,column:21},end:{line:64,column:31}},"21":{start:{line:66,column:20},end:{line:66,column:44}},"22":{start:{line:68,column:6},end:{line:68,column:93}},"23":{start:{line:68,column:18},end:{line:68,column:93}},"24":{start:{line:69,column:8},end:{line:69,column:28}},"25":{start:{line:71,column:6},end:{line:71,column:23}},"26":{start:{line:74,column:4},end:{line:74,column:29}},"27":{start:{line:84,column:18},end:{line:84,column:20}},"28":{start:{line:86,column:4},end:{line:110,column:5}},"29":{start:{line:87,column:21},end:{line:87,column:31}},"30":{start:{line:88,column:36},end:{line:88,column:44}},"31":{start:{line:90,column:22},end:{line:90,column:24}},"32":{start:{line:92,column:6},end:{line:92,column:53}},"33":{start:{line:92,column:23},end:{line:92,column:53}},"34":{start:{line:93,column:6},end:{line:93,column:50}},"35":{start:{line:93,column:22},end:{line:93,column:50}},"36":{start:{line:95,column:27},end:{line:98,column:8}},"37":{start:{line:100,column:6},end:{line:101,column:83}},"38":{start:{line:101,column:8},end:{line:101,column:83}},"39":{start:{line:107,column:6},end:{line:107,column:40}},"40":{start:{line:109,column:6},end:{line:109,column:23}},"41":{start:{line:112,column:4},end:{line:112,column:29}},"42":{start:{line:122,column:18},end:{line:122,column:20}},"43":{start:{line:124,column:4},end:{line:135,column:5}},"44":{start:{line:125,column:21},end:{line:125,column:31}},"45":{start:{line:127,column:27},end:{line:127,column:60}},"46":{start:{line:129,column:6},end:{line:130,column:83}},"47":{start:{line:130,column:8},end:{line:130,column:83}},"48":{start:{line:132,column:6},end:{line:132,column:34}},"49":{start:{line:134,column:6},end:{line:134,column:23}},"50":{start:{line:137,column:4},end:{line:137,column:29}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:12,column:4},end:{line:12,column:5}},loc:{start:{line:12,column:38},end:{line:30,column:3}},line:12},"1":{name:"(anonymous_1)",decl:{start:{line:38,column:2},end:{line:38,column:3}},loc:{start:{line:38,column:37},end:{line:52,column:3}},line:38},"2":{name:"(anonymous_2)",decl:{start:{line:60,column:2},end:{line:60,column:3}},loc:{start:{line:60,column:33},end:{line:75,column:3}},line:60},"3":{name:"(anonymous_3)",decl:{start:{line:83,column:2},end:{line:83,column:3}},loc:{start:{line:83,column:36},end:{line:113,column:3}},line:83},"4":{name:"(anonymous_4)",decl:{start:{line:121,column:2},end:{line:121,column:3}},loc:{start:{line:121,column:36},end:{line:138,column:3}},line:121}},branchMap:{"0":{loc:{start:{line:68,column:6},end:{line:68,column:93}},type:"if",locations:[{start:{line:68,column:6},end:{line:68,column:93}},{start:{line:68,column:6},end:{line:68,column:93}}],line:68},"1":{loc:{start:{line:92,column:6},end:{line:92,column:53}},type:"if",locations:[{start:{line:92,column:6},end:{line:92,column:53}},{start:{line:92,column:6},end:{line:92,column:53}}],line:92},"2":{loc:{start:{line:93,column:6},end:{line:93,column:50}},type:"if",locations:[{start:{line:93,column:6},end:{line:93,column:50}},{start:{line:93,column:6},end:{line:93,column:50}}],line:93},"3":{loc:{start:{line:100,column:6},end:{line:101,column:83}},type:"if",locations:[{start:{line:100,column:6},end:{line:101,column:83}},{start:{line:100,column:6},end:{line:101,column:83}}],line:100},"4":{loc:{start:{line:129,column:6},end:{line:130,column:83}},type:"if",locations:[{start:{line:129,column:6},end:{line:130,column:83}},{start:{line:129,column:6},end:{line:130,column:83}}],line:129}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"9df2bf68d501fbaec47579573979adbac333bca3"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_51qo1piaq=function(){return actualCoverage;};}return actualCoverage;}cov_51qo1piaq();const ApplicationError=(cov_51qo1piaq().s[0]++,require('../config/ApplicationError'));const Tutor=(cov_51qo1piaq().s[1]++,require('../models/Tutor'));const mongo=(cov_51qo1piaq().s[2]++,require('mongodb'));cov_51qo1piaq().s[3]++;module.exports={/**
   * Create new tutor and save to database.
   *
   * @param {Request} req
   * @param {Response} res
   */async createTutor(req,res,next){cov_51qo1piaq().f[0]++;let payload=(cov_51qo1piaq().s[4]++,{});cov_51qo1piaq().s[5]++;try{const{firstName,lastName}=(cov_51qo1piaq().s[6]++,req.body);//const o_id;
const newTutor=(cov_51qo1piaq().s[7]++,new Tutor({firstName,lastName}));const savedTutor=(cov_51qo1piaq().s[8]++,await newTutor.save());//o_id = new mongo.OnjectID(savedTutor);
//console.log("Object id" + o_id);
cov_51qo1piaq().s[9]++;payload={tutor:savedTutor};}catch(err){cov_51qo1piaq().s[10]++;return next(err);}cov_51qo1piaq().s[11]++;return res.json(payload);},/**
   * Get all tutor from database.
   *
   * @param {Request} req
   * @param {Response} res
   */async getAllTutors(req,res,next){cov_51qo1piaq().f[1]++;let payload=(cov_51qo1piaq().s[12]++,{});cov_51qo1piaq().s[13]++;try{const allTutors=(cov_51qo1piaq().s[14]++,await Tutor.find({}));cov_51qo1piaq().s[15]++;payload={tutors:allTutors};}catch(err){cov_51qo1piaq().s[16]++;return next(err);}cov_51qo1piaq().s[17]++;return res.json(payload);},/**
   * Get a tutor from the database by id.
   *
   * @param {Request} req
   * @param {Response} res
   */async getTutor(req,res,next){cov_51qo1piaq().f[2]++;let payload=(cov_51qo1piaq().s[18]++,{});cov_51qo1piaq().s[19]++;try{const{id}=(cov_51qo1piaq().s[20]++,req.params);const tutor=(cov_51qo1piaq().s[21]++,await Tutor.findById(id));cov_51qo1piaq().s[22]++;if(!tutor){cov_51qo1piaq().b[0][0]++;cov_51qo1piaq().s[23]++;throw new ApplicationError({tutor:'Tutor not found.',statusCode:404});}else{cov_51qo1piaq().b[0][1]++;}cov_51qo1piaq().s[24]++;payload={tutor};}catch(err){cov_51qo1piaq().s[25]++;return next(err);}cov_51qo1piaq().s[26]++;return res.json(payload);},/**
   * Update a tutor in the database by id.
   *
   * @param {Request} req
   * @param {Response} res
   */async updateTutor(req,res,next){cov_51qo1piaq().f[3]++;let payload=(cov_51qo1piaq().s[27]++,{});cov_51qo1piaq().s[28]++;try{const{id}=(cov_51qo1piaq().s[29]++,req.params);const{firstName,lastName}=(cov_51qo1piaq().s[30]++,req.body);const updates=(cov_51qo1piaq().s[31]++,{});cov_51qo1piaq().s[32]++;if(!!firstName){cov_51qo1piaq().b[1][0]++;cov_51qo1piaq().s[33]++;updates.firstName=firstName;}else{cov_51qo1piaq().b[1][1]++;}cov_51qo1piaq().s[34]++;if(!!lastName){cov_51qo1piaq().b[2][0]++;cov_51qo1piaq().s[35]++;updates.lastName=lastName;}else{cov_51qo1piaq().b[2][1]++;}const updatedTutor=(cov_51qo1piaq().s[36]++,await Tutor.findByIdAndUpdate(id,updates,{new:true,runValidators:true}));cov_51qo1piaq().s[37]++;if(!updatedTutor){cov_51qo1piaq().b[3][0]++;cov_51qo1piaq().s[38]++;throw new ApplicationError({tutor:'Tutor not found.',statusCode:404});}else{cov_51qo1piaq().b[3][1]++;}// TODO: Retrieve user from user service
// const author = await getUserById(authorId);
// updatedTutor.author = author;
cov_51qo1piaq().s[39]++;payload={tutor:updatedTutor};}catch(err){cov_51qo1piaq().s[40]++;return next(err);}cov_51qo1piaq().s[41]++;return res.json(payload);},/**
   * Delete a tutor in the database by id.
   *
   * @param {Request} req
   * @param {Response} res
   */async deleteTutor(req,res,next){cov_51qo1piaq().f[4]++;let payload=(cov_51qo1piaq().s[42]++,{});cov_51qo1piaq().s[43]++;try{const{id}=(cov_51qo1piaq().s[44]++,req.params);const deletedTutor=(cov_51qo1piaq().s[45]++,await Tutor.findByIdAndDelete(id));cov_51qo1piaq().s[46]++;if(!deletedTutor){cov_51qo1piaq().b[4][0]++;cov_51qo1piaq().s[47]++;throw new ApplicationError({tutor:'Tutor not found.',statusCode:404});}else{cov_51qo1piaq().b[4][1]++;}cov_51qo1piaq().s[48]++;payload={success:true};}catch(err){cov_51qo1piaq().s[49]++;return next(err);}cov_51qo1piaq().s[50]++;return res.json(payload);}};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,