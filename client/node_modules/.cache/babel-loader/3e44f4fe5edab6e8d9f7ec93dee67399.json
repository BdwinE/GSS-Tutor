{"remainingRequest":"C:\\Users\\asolu\\Desktop\\MSU_Denver\\Spring_2021\\Technical_Software_Proj\\Granular_Softwar_Solutions\\Granular%20Software%20Solutions\\client\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\asolu\\Desktop\\MSU_Denver\\Spring_2021\\Technical_Software_Proj\\Granular_Softwar_Solutions\\Granular%20Software%20Solutions\\client\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\asolu\\Desktop\\MSU_Denver\\Spring_2021\\Technical_Software_Proj\\Granular_Softwar_Solutions\\Granular%20Software%20Solutions\\client\\src\\store\\modules\\messaging.js","dependencies":[{"path":"C:\\Users\\asolu\\Desktop\\MSU_Denver\\Spring_2021\\Technical_Software_Proj\\Granular_Softwar_Solutions\\Granular%20Software%20Solutions\\client\\src\\store\\modules\\messaging.js","mtime":1619908030912},{"path":"C:\\Users\\asolu\\Desktop\\MSU_Denver\\Spring_2021\\Technical_Software_Proj\\Granular_Softwar_Solutions\\Granular%20Software%20Solutions\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1619908227131},{"path":"C:\\Users\\asolu\\Desktop\\MSU_Denver\\Spring_2021\\Technical_Software_Proj\\Granular_Softwar_Solutions\\Granular%20Software%20Solutions\\client\\node_modules\\babel-loader\\lib\\index.js","mtime":1619908226782},{"path":"C:\\Users\\asolu\\Desktop\\MSU_Denver\\Spring_2021\\Technical_Software_Proj\\Granular_Softwar_Solutions\\Granular%20Software%20Solutions\\client\\node_modules\\eslint-loader\\index.js","mtime":1619908277030}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/Users/asolu/Desktop/MSU_Denver/Spring_2021/Technical_Software_Proj/Granular_Softwar_Solutions/Granular%20Software%20Solutions/client/src/store/modules/messaging.js"],"names":["Vue","authorApi","roomApi","messageApi","messagingApi","namespaced","state","isConnected","connectedRooms","authors","rooms","room","message","messages","getters","actions","clearAuthors","commit","clearRooms","clearRoom","clearMessage","SOCKET_CONNECT","SOCKET_DISCONNECT","createRoom","creationArgs","bind","_vm","$socket","mostRecentMessage","joinRoom","joinRooms","leaveRoom","leaveRooms","leaveAllRooms","getRooms","filters","getAllRooms","length","getRoom","id","getRoomById","updateRoom","updateArgs","updateRoomById","newRoom","archiveRoom","archiveRoomById","deleteRoom","deleteRoomById","SOCKET_ROOM_CREATED","SOCKET_ROOM_JOINED","SOCKET_ROOMS_JOINED","SOCKET_ROOM_LEFT","SOCKET_ROOMS_LEFT","SOCKET_ROOM_UPDATED","_id","SOCKET_ROOM_ARCHIVED","SOCKET_ROOM_DELETED","createMessage","roomId","getMessages","getAllMessages","getMessage","getMessageById","updateMessage","updateMessageById","newMessage","archiveMessage","archiveMessageById","deleteMessage","deleteMessageById","SOCKET_MESSAGE_CREATED","SOCKET_MESSAGE_UPDATED","SOCKET_MESSAGE_ARCHIVED","SOCKET_MESSAGE_DELETED","getAuthors","getAllAuthors","SOCKET_AUTHOR_UPDATED","author","SOCKET_AUTHOR_ARCHIVED","SOCKET_AUTHOR_DELETED","CREATE_MESSAGE","context","messageObj","mutations","setIsConnected","setRooms","addRooms","push","addNewRoom","unshift","removeAndAddUpdatedRoom","oldRoom","filter","shouldReplace","removeRoom","setMostRecentMessage","map","replaceMostRecentMessage","removeMostRecentMessage","setRoom","addConnectedRoom","joinedRoom","addConnectedRooms","joinedRooms","removeConnectedRoom","leftRoom","removeConnectedRooms","leftRooms","includes","setMessages","set","addMessages","addNewMessage","replaceMessage","removeMessage","setMessage","setAuthors","addAuthors","replaceAuthor","newAuthor","archiveAuthor","isArchived","isActive","removeAuthor","data"],"mappings":"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","sourcesContent":["import Vue from 'vue'\r\nimport authorApi from '../../api/messaging/authors'\r\nimport roomApi from '../../api/messaging/rooms'\r\nimport messageApi from '../../api/messaging/messages'\r\n\r\n// To be removed\r\nimport messagingApi from '../../api/messaging'\r\n\r\nconst namespaced = true\r\n\r\nconst state = {\r\n    isConnected: false,\r\n    connectedRooms: [],\r\n    authors: [],\r\n    rooms: [],\r\n    room: {},\r\n    message: {},\r\n\r\n    // To be removed\r\n    messages: [], \r\n}\r\n\r\nconst getters = {\r\n    isConnected(state){\r\n        return state.isConnected\r\n    },\r\n\r\n    authors(state){\r\n        return state.authors\r\n    },\r\n    \r\n    rooms(state){\r\n        return state.rooms\r\n    },\r\n    \r\n    room(state){\r\n        return state.room\r\n    },\r\n\r\n    message(state){\r\n        return state.message\r\n    },\r\n\r\n    // To be removed\r\n    messages(state){\r\n        return state.messages\r\n    }\r\n}\r\n\r\nconst actions = {\r\n    // Resets\r\n\r\n    clearAuthors({ commit }){\r\n        commit('clearAuthors')\r\n    },\r\n\r\n    clearRooms({ commit }){\r\n        commit('clearRooms')\r\n    },\r\n\r\n    clearRoom({ commit }){\r\n        commit('clearRoom')\r\n    },\r\n\r\n    clearMessage({ commit }){\r\n        commit('clearMessage')\r\n    },\r\n\r\n    // Incoming system events\r\n\r\n    SOCKET_CONNECT({ commit }){\r\n        commit('setIsConnected', true)\r\n    },\r\n\r\n    SOCKET_DISCONNECT({ commit }){\r\n        commit('setIsConnected', false)\r\n    },\r\n\r\n    // Rooms outgoing requests\r\n\r\n    async createRoom({ commit }, creationArgs){\r\n        const room = await roomApi.createRoom.bind(this._vm.$socket)(creationArgs)\r\n        \r\n        commit('addNewRoom', { ...room, mostRecentMessage: {} })\r\n        commit('setRoom', room)\r\n\r\n        return room\r\n    },\r\n\r\n    joinRoom({ commit }, room){\r\n        roomApi.joinRoom.bind(this._vm.$socket)(room)\r\n    },\r\n\r\n    joinRooms({ commit }, rooms){\r\n        roomApi.joinRooms.bind(this._vm.$socket)(rooms)\r\n    },\r\n\r\n    leaveRoom({ commit }, room){\r\n        roomApi.leaveRoom.bind(this._vm.$socket)(room)\r\n    },\r\n\r\n    leaveRooms({ commit }, rooms){\r\n        roomApi.leaveRooms.bind(this._vm.$socket)(rooms)\r\n    },\r\n\r\n    leaveAllRooms({ state, commit }){\r\n        roomApi.leaveRooms.bind(this._vm.$socket)(state.connectedRooms)\r\n    },\r\n\r\n    async getRooms({ state, commit }, filters){\r\n        const rooms = await roomApi.getAllRooms(filters)\r\n\r\n        if (state.rooms.length > 0){\r\n            commit('addRooms', rooms)\r\n        } else {\r\n            commit('setRooms', rooms)\r\n        }\r\n    },\r\n\r\n    async getRoom({ commit }, id){\r\n        const room = await roomApi.getRoomById(id)\r\n\r\n        commit('setRoom', room)\r\n    },\r\n\r\n    async updateRoom({ commit }, { id, updateArgs }){\r\n        const room = await roomApi.updateRoomById.bind(this._vm.$socket)(id, updateArgs)\r\n\r\n        commit('removeAndAddUpdatedRoom', { id, newRoom: room })\r\n        commit('updateRoom', room)\r\n    },\r\n\r\n    async archiveRoom({ commit }, id){\r\n        const room = await roomApi.archiveRoomById.bind(this._vm.$socket)(id)\r\n\r\n        commit('removeAndAddUpdatedRoom', { id, newRoom: room })\r\n        commit('clearRoom')\r\n    },\r\n\r\n    async deleteRoom({ commit }, id){\r\n        const room = await roomApi.deleteRoomById.bind(this._vm.$socket)(id)\r\n\r\n        commit('removeRoom', id)\r\n        commit('clearRoom')\r\n    },\r\n\r\n    // Rooms incoming responses\r\n\r\n    SOCKET_ROOM_CREATED({ commit }, { room }){\r\n        commit('addNewRoom', { ...room, mostRecentMessage: {} })\r\n    },\r\n\r\n    SOCKET_ROOM_JOINED({ commit }, room){\r\n        commit('addConnectedRoom', room)\r\n    },\r\n\r\n    SOCKET_ROOMS_JOINED({ commit }, rooms){\r\n        commit('addConnectedRooms', rooms)\r\n    },\r\n\r\n    SOCKET_ROOM_LEFT({ commit }, room){\r\n        commit('removeConnectedRoom', room)\r\n    },\r\n\r\n    SOCKET_ROOMS_LEFT({ commit }, rooms){\r\n        commit('removeConnectedRooms', rooms)\r\n    },\r\n\r\n    SOCKET_ROOM_UPDATED({ state, commit }, { room }){\r\n        commit('removeAndAddUpdatedRoom', { id, newRoom: room })\r\n\r\n        if (state.room._id === room._id){\r\n            commit('updateRoom', room)\r\n        }\r\n    },\r\n\r\n    SOCKET_ROOM_ARCHIVED({ commit }, { room }){\r\n        commit('removeAndAddUpdatedRoom', { id, newRoom: room })\r\n\r\n        if (state.room._id === room._id){\r\n            commit('clearRoom')\r\n        }\r\n    },\r\n\r\n    SOCKET_ROOM_DELETED({ commit }, { room }){\r\n        commit('removeRoom', id )\r\n\r\n        if (state.room._id === room._id){\r\n            commit('clearRoom')\r\n        }\r\n    },\r\n    \r\n    // Messages outgoing requests\r\n\r\n    async createMessage({ commit }, creationArgs){\r\n        const message = await messageApi.createMessage.bind(this._vm.$socket)(creationArgs)\r\n\r\n        commit('addNewMessage', message)\r\n        commit('setMostRecentMessage', { id: message.roomId, message })\r\n    },\r\n\r\n    async getMessages({ commit }, filters){\r\n        const messages = await messageApi.getAllMessages(filters)\r\n\r\n        if (!state.room.messages){\r\n            commit('setMessages', messages)\r\n        } else {\r\n            commit('addMessages', messages)\r\n        }\r\n    },\r\n\r\n    async getMessage({ commit }, id){\r\n        const message = await messageApi.getMessageById(id)\r\n\r\n        commit('setMessage', message)\r\n    },\r\n\r\n    async updateMessage({ commit }, { id, updateArgs }){\r\n        const message = await messageApi.updateMessageById.bind(this._vm.$socket)(id, updateArgs)\r\n\r\n        commit('replaceMessage', { id, newMessage: message })\r\n        commit('updateMessage', message)\r\n        commit('setMostRecentMessage', { id: message.roomId, message })\r\n    },\r\n\r\n    async archiveMessage({ commit }, id){\r\n        const message = await messageApi.archiveMessageById.bind(this._vm.$socket)(id)\r\n\r\n        commit('replaceMessage', { id, newMessage: message })\r\n        commit('clearMessage')\r\n    },\r\n\r\n    async deleteMessage({ commit }, id){\r\n        const message = await messageApi.deleteMessageById.bind(this._vm.$socket)(id)\r\n\r\n        commit('removeMessage', id)\r\n        commit('clearMessage')\r\n    },\r\n\r\n    // Messages incoming responses\r\n\r\n    // To be used in new implementation\r\n    SOCKET_MESSAGE_CREATED({ state, commit }, { message }){\r\n        commit('setMostRecentMessage', { id: message.roomId, message})\r\n\r\n        if (state.room._id === message.roomId){\r\n            commit('addNewMessage', message)\r\n        }\r\n    },\r\n\r\n    SOCKET_MESSAGE_UPDATED({ state, commit }, { message }){\r\n        commit('replaceMostRecentMessage', { id: message.roomId, message })\r\n\r\n        if (state.room._id === message.roomId){\r\n            commit('replaceMessage', { id: message.roomId, newMessage: message })\r\n        }\r\n\r\n        if (state.message._id === message._id){\r\n            commit('updateMessage', message)\r\n        }\r\n    },\r\n\r\n    SOCKET_MESSAGE_ARCHIVED({ commit }, { message }){\r\n        commit('replaceMostRecentMessage', { id: message.roomId, message })\r\n\r\n        if (state.room._id === message.roomId){\r\n            commit('replaceMessage', { id: message.roomId, newMessage: message })\r\n        }\r\n\r\n        if (state.message._id === message._id){\r\n            commit('clearMessage')\r\n        }\r\n    },\r\n\r\n    SOCKET_MESSAGE_DELETED({ commit }, { message }){\r\n        commit('removeMostRecentMessage', message.roomId)\r\n\r\n        if (state.room._id === message.roomId){\r\n            commit('removeMessage', message.roomId)\r\n        }\r\n\r\n        if (state.message._id === message._id){\r\n            commit('clearMessage')\r\n        }\r\n    },\r\n\r\n    // Authors outgoing requests\r\n\r\n    async getAuthors({ commit }, filters){\r\n        const authors = await authorApi.getAllAuthors(filters)\r\n\r\n        if (state.authors.length > 0){\r\n            commit('addAuthors', authors)\r\n        } else {\r\n            commit('setAuthors', authors)\r\n        }\r\n    },\r\n    \r\n    // Authors incoming responses\r\n\r\n    SOCKET_AUTHOR_UPDATED({ state, commit }, { author }){\r\n        commit('replaceAuthor', author)\r\n    },\r\n\r\n    SOCKET_AUTHOR_ARCHIVED({ commit }, { author }){\r\n        commit('archiveAuthor', author._id)\r\n    },\r\n\r\n    SOCKET_AUTHOR_DELETED({ commit }, { author }){\r\n        commit('removeAuthor', author._id)\r\n    },\r\n\r\n    // To be removed\r\n    CREATE_MESSAGE(context, messageObj){\r\n        messagingApi.createMessage(this._vm.$socket, messageObj)\r\n    },\r\n}\r\n\r\nconst mutations = {\r\n    // System event mutators\r\n\r\n    setIsConnected(state, isConnected){\r\n        state.isConnected = isConnected\r\n    },\r\n\r\n    // Rooms mutators \r\n    \r\n    clearRooms(state){\r\n        state.rooms = []\r\n    },\r\n\r\n    setRooms(state, rooms){\r\n        state.rooms = rooms\r\n    },\r\n\r\n    addRooms(state, rooms){\r\n        state.rooms.push(...rooms)\r\n    },\r\n\r\n    addNewRoom(state, room){\r\n        state.rooms.unshift(room)\r\n    },\r\n\r\n    removeAndAddUpdatedRoom(state, { id, newRoom }){\r\n        let oldRoom = {}\r\n\r\n        state.rooms = state.rooms.filter(room => {\r\n            const shouldReplace = room.id === id\r\n\r\n            if (shouldReplace) oldRoom = room\r\n            \r\n            return !shouldReplace\r\n        })\r\n\r\n        state.rooms.unshift({ ...oldRoom, ...newRoom })\r\n    },\r\n\r\n    removeRoom(state, id){\r\n        state.rooms = state.rooms.filter(room => room.id !== id)\r\n    },\r\n\r\n    // Rooms Message mutators\r\n\r\n    setMostRecentMessage(state, { id, message }){\r\n        state.rooms = state.rooms.map(room => {\r\n            return room._id === id\r\n                ? { ...room, mostRecentMessage: message }\r\n                : room\r\n        })\r\n    },\r\n\r\n    replaceMostRecentMessage(state, { id, message }){\r\n        state.rooms = state.rooms.map(room => {\r\n            return room._id === id\r\n                ? { ...room, mostRecentMessage: { ...room.mostRecentMessage, ...message } }\r\n                : room\r\n        })\r\n    },\r\n\r\n    removeMostRecentMessage(state, id){\r\n        state.rooms = state.rooms.map(room => {\r\n            return room._id === id\r\n                ? { ...room, mostRecentMessage: {} }\r\n                : room\r\n        })\r\n    },\r\n\r\n    // Room mutators\r\n\r\n    clearRoom(state){\r\n        state.room = {}\r\n    },\r\n\r\n    setRoom(state, room){\r\n        state.room = room\r\n    },\r\n\r\n    updateRoom(state, room){\r\n        state.room = { ...state.room, ...room }\r\n    },\r\n\r\n    // Connected Rooms mutators \r\n    addConnectedRoom(state, joinedRoom){\r\n        state.connectedRooms.push(joinedRoom)\r\n    },\r\n\r\n    addConnectedRooms(state, joinedRooms){\r\n        state.connectedRooms.push(...joinedRooms)\r\n    },\r\n\r\n    removeConnectedRoom(state, leftRoom){\r\n        state.connectedRooms = state.connectedRooms.filter(room => room !== leftRoom )\r\n    },\r\n\r\n    removeConnectedRooms(state, leftRooms){\r\n        state.connectedRooms = state.connectedRooms.filter(room => !leftRooms.includes(room))\r\n    },\r\n\r\n    // Room Messages mutators\r\n\r\n    setMessages(state, messages){\r\n        Vue.set(state.room, 'messages', messages)\r\n    },\r\n\r\n    addMessages(state, messages){\r\n        if (!state.room.messages){\r\n            Vue.set(state.room, 'messages', [])\r\n        }\r\n\r\n        state.room.messages.push(...messages)\r\n    },\r\n\r\n    addNewMessage(state, message){\r\n        if (!state.room.messages){\r\n            Vue.set(state.room, 'messages', [])\r\n        }\r\n\r\n        state.room.messages.unshift(message)\r\n    },\r\n\r\n    replaceMessage(state, { id, newMessage }){\r\n        if (!state.room.messages){\r\n            Vue.set(state.room, 'messages', [])\r\n            state.room.messages.push(newMessage)\r\n        } else {\r\n            state.room.messages = state.room.messages.map(message => {\r\n                return message._id === id\r\n                    ? { ...message, ...newMessage }\r\n                    : message\r\n            })\r\n        }\r\n    },\r\n\r\n    removeMessage(state, id){\r\n        if (!state.room.messages){\r\n            Vue.set(state.room, 'messages', [])\r\n        } else {\r\n            state.room.messages = state.room.messages.filter(message => message.id !== id)\r\n        }\r\n    },\r\n\r\n    // Message mutators\r\n\r\n    clearMessage(state){\r\n        state.message = {}\r\n    },\r\n\r\n    setMessage(state, message){\r\n        state.message = message\r\n    },\r\n\r\n    updateMessage(state, message){\r\n        state.message = { ...state.message, ...message }\r\n    },\r\n\r\n    // Author mutators\r\n\r\n    clearAuthors(state){\r\n        state.authors = []\r\n    },\r\n\r\n    setAuthors(state, authors){\r\n        state.authors = authors\r\n    },\r\n\r\n    addAuthors(state, authors){\r\n        state.authors.push(...authors)\r\n    },\r\n\r\n    replaceAuthor(state, newAuthor){\r\n        state.rooms = state.rooms.map(room => {\r\n            const authors = room.authors.map(author => {\r\n                return author._id === newAuthor._id\r\n                    ? { ...author, ...newAuthor }\r\n                    : author\r\n            })\r\n\r\n            return { ...room, authors }\r\n        })\r\n\r\n        state.room = {\r\n            ...state.room,\r\n            authors: state.room.authors.map(author => {\r\n                return author._id === newAuthor._id\r\n                    ? { ...author, ...newAuthor }\r\n                    : author\r\n            })\r\n        }\r\n    },\r\n\r\n    archiveAuthor(state, id){\r\n        state.rooms = state.rooms.map(room => {\r\n            const authors = room.authors.map(author => {\r\n                return author._id === id\r\n                    ? { ...author, isArchived: true, isActive: false }\r\n                    : author\r\n            })\r\n\r\n            return { ...room, authors }\r\n        })\r\n\r\n        state.room = {\r\n            ...state.room,\r\n            authors: state.room.authors.map(author => {\r\n                return author._id === newAuthor._id\r\n                    ? { ...author, isArchived: true, isActive: false }\r\n                    : author\r\n            })\r\n        }\r\n    },\r\n\r\n    removeAuthor(state, id){\r\n        state.rooms = state.rooms.map(room => {\r\n            const authors = room.authors.filter(author => author._id !== id)\r\n\r\n            return { ...room, authors }\r\n        })\r\n\r\n        state.room = {\r\n            ...state.room,\r\n            authors: state.room.authors.filter(author => author._id !== id)\r\n        }\r\n    },\r\n\r\n    // To be removed\r\n    SOCKET_MESSAGE_CREATED(state, data){\r\n        state.messages.push(data)\r\n    },\r\n}\r\n\r\nexport default {\r\n    namespaced,\r\n    state,\r\n    getters,\r\n    actions,\r\n    mutations,\r\n}"]}]}